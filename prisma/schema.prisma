// prisma/schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int      @id @default(autoincrement())
  user_id_str   String   @unique @map("user_id_string") // Original user_id from json
  username      String
  total_reviews Int
  join_date     DateTime? // Made optional
  trust_score   Float?    // Made optional
  reviews       Review[]

  @@map("users")
}

model Seller {
  id             Int       @id @default(autoincrement())
  seller_id_str  String    @unique @map("seller_id_string") // Original seller_id from json
  seller_name    String    
  total_products Int
  is_verified    Boolean
  trust_score    Float?    // Made optional
  products       Product[]

  @@map("sellers")
}

model Product {
  id                     Int       @id @default(autoincrement())
  product_no             Int       @unique
  category               String
  title                  String
  average_rating         Float?    @map("rating") // Map to "rating" from Item.json
  rating_number          Int?      // From Item.json "rating_number"
  description            String?   // Now a single string, made optional
  price                  Float
  
  store_seller_id_ref    String?   @map("store_seller_id_from_json") // Temp field for seeding store_seller_id
  
  verified_product       Boolean?
  image_url              String?   @map("image") // Map to "image" from Item.json

  // Fields from previous schema, can be removed if no longer in Item.json or defaults are fine
  review_summary         String?   // If not in new Item.json, remove or make nullable
  fake_review_percentage Float?    // If not in new Item.json, remove or make nullable
  details                Json?     // If not in new Item.json, remove or make nullable
  thumbnail_urls         String[]  @default([]) // Keep for consistency or remove
  sizes                  String[]  @default([]) // Keep for consistency or remove
  shipping_info          Json?     // Keep for consistency or remove

  sellerId Int?     // Foreign key to Seller table's PK
  seller   Seller?  @relation(fields: [sellerId], references: [id])

  reviews Review[]

  @@map("products")
}

model Review {
  id                 Int      @id @default(autoincrement())
  review_id_ref      Int?     @unique @map("review_id_from_json") // From reviews.json review_id
  rating             Float?   // Make optional if not always present
  title              String?
  text               String
  
  product_no_ref     Int      // To link with Product.product_no during seed
  user_id_str_ref    String   // To link with User.user_id_str during seed
  
  helpful_vote       Int?
  time               DateTime // Will be parsed from date_time
  
  // Fields from previous schema, can be removed if no longer in reviews.json
  verified_purchase  Boolean?  // If not in new reviews.json, remove or make nullable
  legitimacy_score   Float?    // If not in new reviews.json, remove or make nullable
  spam_flag          Boolean?  // If not in new reviews.json, remove or make nullable
  ai_analysis        String?   // If not in new reviews.json, remove or make nullable

  productId Int?
  product   Product? @relation(fields: [productId], references: [id])

  userId Int?
  user   User?    @relation(fields: [userId], references: [id])

  @@map("reviews")
}